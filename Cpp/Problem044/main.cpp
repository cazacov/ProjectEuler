/* Project Euler
 * Problem 44: Pentagon numbers
 * https://projecteuler.net/problem=44
 *
 * Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:
 * 1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
 * It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.
 * Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal
 * and D = |Pk − Pj| is minimised; what is the value of D?
 */

#include <iostream>
#include <tgmath.h>
#include <map>

bool is_pentagon(int n)
{
    static std::map<int, bool> cache;

    if (cache.count(n))
    {
        return cache[n];
    }

    bool result = true;
    auto disk = n*12+1;
    auto sq = int(sqrt(disk+1));
    if (sq*sq != disk) {
        result = false;
    }

    result = result && (((sq + 1) % 6) == 0);
    cache[n] = result;
    return result;
}

int main() {

    auto n = 1;
    do {
        auto dif = n*(3*n -1);
        for (int m = 1; m <= (dif - 2) / 6; m++)
        {
            auto p1 = m * (3*m - 1);
            auto p2 = p1 + dif;
            if (!is_pentagon(p2)) {
                continue;
            }
            if (!is_pentagon(p1+p2)) {
                continue;
            }
            std::cout << p1 << " (p" << m <<  ") + " << dif << "(p" << n << ") = " << p2 << std::endl;
            std::cout << p1 << " (p" << m <<  ") +" << p2 << " = " << p1+p2 << std::endl;
            return 0;
        }
        n++;
    } while (true);
}